(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{443:function(a,t,v){"use strict";v.r(t);var _=v(56),s=Object(_.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"性能优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[a._v("#")]),a._v(" 性能优化")]),a._v(" "),v("h2",{attrs:{id:"图片优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#图片优化"}},[a._v("#")]),a._v(" 图片优化")]),a._v(" "),v("h3",{attrs:{id:"jpeg-joint-photographic-experts-group"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jpeg-joint-photographic-experts-group"}},[a._v("#")]),a._v(" JPEG（Joint Photographic Experts Group）")]),a._v(" "),v("ul",[v("li",[a._v("联合图像专家小组是一种针对彩色照片而广泛使用的有损压缩图片格式。")]),a._v(" "),v("li",[a._v("不适合：线条图形和文字、图标图形，因为它的压缩算法不太支持这些类型的图形；并且不支持透明度。")]),a._v(" "),v("li",[a._v("非常适合：颜色丰富的照片、彩色图大焦点图、通栏 banner 图；结构不规则的图形。")])]),a._v(" "),v("h3",{attrs:{id:"png-portable-network-graphics"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#png-portable-network-graphics"}},[a._v("#")]),a._v(" PNG（Portable Network Graphics）")]),a._v(" "),v("ul",[v("li",[a._v("便携式网络图形是一种无损压缩的位图图形格式，支持索引、灰度、RGB 三种颜色方案以及 Alpha 通道等特性。")]),a._v(" "),v("li",[a._v("不适合：由于是无损储存，彩色图像体积太大，所以不太适合。")]),a._v(" "),v("li",[a._v("非常适合：纯色、透明、线条彩绘，图标；边缘清晰，有大块相同颜色区域；颜色较少但要半透明。")])]),a._v(" "),v("h3",{attrs:{id:"gif-graphics-interchange-format"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gif-graphics-interchange-format"}},[a._v("#")]),a._v(" GIF（Graphics Interchange Format）")]),a._v(" "),v("ul",[v("li",[a._v("图像互换格式是一种位图图形文件格式，以 8 位色（即 256 种颜色）重现真彩色的图像，采用 LZW 压缩算法进行编码。仅支持完全透明和完全不透明；如果需要比较通用的动画，GIF 是唯一选择。")]),a._v(" "),v("li",[a._v("不适合：每个像素只有 8 比特，不适合储存彩色图片。")]),a._v(" "),v("li",[a._v("非常适合：动画、图标。")])]),a._v(" "),v("h3",{attrs:{id:"webp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webp"}},[a._v("#")]),a._v(" Webp")]),a._v(" "),v("ul",[v("li",[a._v("Webp 是一种现代图像格式，可为图像提供无损压缩和有损压缩，这使得它非常灵活。优秀算法能同时保证一定程序上的图像质量和比较小的体积；可以插入多帧，实现动画效果；可以设置透明度；采用 8 位压缩算法。无损的 Webp 比 PNG 小 26%，有损的 Webp 比 JPEG 小 25%-34%，比 GIF 有更好的动画。")]),a._v(" "),v("li",[a._v("不适合：最多处理 256 色，不适合于彩色图片。")]),a._v(" "),v("li",[a._v("非常适合：适用于图形和半透明图像。")])]),a._v(" "),v("h3",{attrs:{id:"用工具进行图片压缩"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#用工具进行图片压缩"}},[a._v("#")]),a._v(" 用工具进行图片压缩")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("压缩 png：node-pngquant-native")])]),a._v(" "),v("li",[v("p",[a._v("跨平台，压缩比高，压缩 png24 非常好。")])]),a._v(" "),v("li",[v("p",[a._v("压缩 jpg：jpegtran")])]),a._v(" "),v("li",[v("p",[a._v("压缩 gif： GIFsicle")])])]),a._v(" "),v("h3",{attrs:{id:"图片尺寸随网络环境变化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#图片尺寸随网络环境变化"}},[a._v("#")]),a._v(" 图片尺寸随网络环境变化")]),a._v(" "),v("ul",[v("li",[a._v("不同网络环境下，加载不同尺寸和像素的图片，通过在图片 URL 后缀加不同参数改变。")])]),a._v(" "),v("h3",{attrs:{id:"响应式图片"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#响应式图片"}},[a._v("#")]),a._v(" 响应式图片")]),a._v(" "),v("ul",[v("li",[a._v("javaScript 绑定事件监测窗口大小")]),a._v(" "),v("li",[a._v("CSS 媒体查询")]),a._v(" "),v("li",[a._v("img 标签属性 src set")]),a._v(" "),v("li",[a._v("`<img srcset “img-32w.jpg,img-640w.jpg 2x,img-960w.jpg 3x” src=“img-960w.jpg” > (x 描述符：表示图像的设备像素比）")])]),a._v(" "),v("h3",{attrs:{id:"逐步加载图像"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#逐步加载图像"}},[a._v("#")]),a._v(" 逐步加载图像")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("使用统一占位符")])]),a._v(" "),v("li",[v("p",[a._v("使用 LQIP（低质量图像占位符）")])]),a._v(" "),v("li",[v("p",[a._v("lqip")])]),a._v(" "),v("li",[v("p",[a._v("使用 SQIP")])]),a._v(" "),v("li",[v("p",[a._v("基于 SVG 的图像占位符")])]),a._v(" "),v("li",[v("p",[a._v("sqip")])])]),a._v(" "),v("h3",{attrs:{id:"真的需要图片吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#真的需要图片吗"}},[a._v("#")]),a._v(" 真的需要图片吗？")]),a._v(" "),v("ul",[v("li",[a._v("Web Font 代替图片")]),a._v(" "),v("li",[a._v("采用 Data URI 代替图片")]),a._v(" "),v("li",[a._v("采用 Image spriting （雪碧图）")])]),a._v(" "),v("h2",{attrs:{id:"优化-html"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化-html"}},[a._v("#")]),a._v(" 优化 HTML")]),a._v(" "),v("h3",{attrs:{id:"精简-html-代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#精简-html-代码"}},[a._v("#")]),a._v(" 精简 HTML 代码")]),a._v(" "),v("ul",[v("li",[a._v("减少 HTML 嵌套")]),a._v(" "),v("li",[a._v("减少 DOM 节点数")]),a._v(" "),v("li",[a._v("减少无语义代码（清除浮动）")]),a._v(" "),v("li",[a._v("删除 http 或者 https（前提协议头与页面一致）")]),a._v(" "),v("li",[a._v("删除多余的空格、换行符、缩进和不必要的注释")]),a._v(" "),v("li",[a._v("省略冗余标签和属性")]),a._v(" "),v("li",[a._v("使用相对路径的 URL")])]),a._v(" "),v("h3",{attrs:{id:"文件放在合适的位置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件放在合适的位置"}},[a._v("#")]),a._v(" 文件放在合适的位置")]),a._v(" "),v("ul",[v("li",[a._v("CSS 文件链接尽量放在页面头部")]),a._v(" "),v("li",[a._v("JS 引用放在 HTML 底部")])]),a._v(" "),v("h3",{attrs:{id:"增强用户体验"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#增强用户体验"}},[a._v("#")]),a._v(" 增强用户体验")]),a._v(" "),v("ul",[v("li",[a._v("设置 favicon.ico")]),a._v(" "),v("li",[a._v("增加首屏必要的 css 和 js，比如页面框架北京图片或者 loading 图标。")])]),a._v(" "),v("h2",{attrs:{id:"css-优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css-优化"}},[a._v("#")]),a._v(" CSS 优化")]),a._v(" "),v("h3",{attrs:{id:"提升-css-渲染性能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#提升-css-渲染性能"}},[a._v("#")]),a._v(" 提升 CSS 渲染性能")]),a._v(" "),v("ul",[v("li",[a._v("谨慎使用 expensive 属性（如 nth-child 伪类;position:fixed 定位）")]),a._v(" "),v("li",[a._v("尽量减少样式层级数 （如 div ul li span i {colir:blue;}")]),a._v(" "),v("li",[a._v("尽量避免使用真用过多 cpu 和内存的属性（如 text-indent:-9999px）")]),a._v(" "),v("li",[a._v("尽量避免使用耗电量大的属性（如 CSS3 3D transforms、CSS3 transitions、Opacity）")])]),a._v(" "),v("h3",{attrs:{id:"合适使用-css-选择器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#合适使用-css-选择器"}},[a._v("#")]),a._v(" 合适使用 CSS 选择器")]),a._v(" "),v("ul",[v("li",[a._v("避免使用 CSS 表达式")]),a._v(" "),v("li",[a._v("尽量避免使用通配符选择器")]),a._v(" "),v("li",[a._v("尽量避免类正则的属性选择器")])]),a._v(" "),v("h3",{attrs:{id:"提升-css-文件加载性能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#提升-css-文件加载性能"}},[a._v("#")]),a._v(" 提升 CSS 文件加载性能")]),a._v(" "),v("ul",[v("li",[a._v("使用外链的 CSS")]),a._v(" "),v("li",[a._v("尽量避免使用 @import")])]),a._v(" "),v("h3",{attrs:{id:"精简-css-代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#精简-css-代码"}},[a._v("#")]),a._v(" 精简 CSS 代码")]),a._v(" "),v("ul",[v("li",[a._v("使用缩写语句")]),a._v(" "),v("li",[a._v("删除不必要的零")]),a._v(" "),v("li",[a._v("删除不必要的单位，如 px")]),a._v(" "),v("li",[a._v("删除过多分号")]),a._v(" "),v("li",[a._v("删除空格和注释")]),a._v(" "),v("li",[a._v("尽量减少样式表的大小")])]),a._v(" "),v("h3",{attrs:{id:"合理使用-web-fonts"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#合理使用-web-fonts"}},[a._v("#")]),a._v(" 合理使用 Web Fonts")]),a._v(" "),v("ul",[v("li",[a._v("将字体部署在 CDN 上")]),a._v(" "),v("li",[a._v("将字体以 base64 形式保存在 CSS 中并通过 localStorage 进行缓存")]),a._v(" "),v("li",[a._v("Google 字体库应使用国内托管服务")])]),a._v(" "),v("h3",{attrs:{id:"css-动画优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css-动画优化"}},[a._v("#")]),a._v(" CSS 动画优化")]),a._v(" "),v("ul",[v("li",[a._v("尽量避免同时过多动画")]),a._v(" "),v("li",[a._v("延迟动画初始化以便让其他 CSS 正常渲染")]),a._v(" "),v("li",[a._v("结合 SVG")])]),a._v(" "),v("h2",{attrs:{id:"javascript-优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript-优化"}},[a._v("#")]),a._v(" javascript 优化")]),a._v(" "),v("h3",{attrs:{id:"js-优化总体原则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js-优化总体原则"}},[a._v("#")]),a._v(" JS 优化总体原则")]),a._v(" "),v("ul",[v("li",[a._v("当需要时才优化")]),a._v(" "),v("li",[a._v("考虑可维护性")])]),a._v(" "),v("h3",{attrs:{id:"提升-js-文件加载性能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#提升-js-文件加载性能"}},[a._v("#")]),a._v(" 提升 JS 文件加载性能")]),a._v(" "),v("ul",[v("li",[a._v("加载元素的顺序 CSS 文件放在"),v("code",[a._v("<head>")]),a._v("里，JS 文件放在"),v("code",[a._v("<body>")]),a._v("里")])]),a._v(" "),v("h3",{attrs:{id:"js-变量和函数优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js-变量和函数优化"}},[a._v("#")]),a._v(" jS 变量和函数优化")]),a._v(" "),v("ul",[v("li",[a._v("尽量使用 Id 选择器")]),a._v(" "),v("li",[a._v("尽量避免使用 eval")]),a._v(" "),v("li",[a._v("JS 函数尽可能保持简洁")]),a._v(" "),v("li",[a._v("使用事件节流函数")]),a._v(" "),v("li",[a._v("使用事件委托")])]),a._v(" "),v("h3",{attrs:{id:"js-动画优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js-动画优化"}},[a._v("#")]),a._v(" jS 动画优化")]),a._v(" "),v("ul",[v("li",[a._v("避免添加大量 JS 动画")]),a._v(" "),v("li",[a._v("尽量使用 CSS3 动画")]),a._v(" "),v("li",[a._v("尽量使用 Canvas 动画")]),a._v(" "),v("li",[a._v("合理使用 requestAnimationFrame 动画代替 setTimeout、setInterval")])]),a._v(" "),v("h3",{attrs:{id:"合理使用缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#合理使用缓存"}},[a._v("#")]),a._v(" 合理使用缓存")]),a._v(" "),v("ul",[v("li",[a._v("合理缓存 DOM 对象（将 DOM 保存到一个对象里）")]),a._v(" "),v("li",[a._v("缓存列表长度")]),a._v(" "),v("li",[a._v("使用可缓存的 AJAX")])]),a._v(" "),v("h2",{attrs:{id:"javascript-缓存优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript-缓存优化"}},[a._v("#")]),a._v(" JavaScript 缓存优化")]),a._v(" "),v("h3",{attrs:{id:"cookie"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[a._v("#")]),a._v(" Cookie")]),a._v(" "),v("ul",[v("li",[a._v("通常由浏览器储存，然后将 Cookie 与每个后续请求一起发送到同一服务器。收到 HTTP 请求时，服务器可以发送带有 Cookie 的 header 头。可以给 Cookie 设置有效时间。")])]),a._v(" "),v("p",[a._v("应用于：")]),a._v(" "),v("ul",[v("li",[a._v("会话管理：登录名、购物车商品、游戏得分等")]),a._v(" "),v("li",[a._v("个性化：用户首先选、主题或其他设置")]),a._v(" "),v("li",[a._v("跟踪：记录和分析用户行为，比如埋点")])]),a._v(" "),v("h3",{attrs:{id:"sessionstorage"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[a._v("#")]),a._v(" SessionStorage")]),a._v(" "),v("ul",[v("li",[a._v("创建一个本地存储的健/值对（页面关闭即销毁）")])]),a._v(" "),v("p",[a._v("应用于：")]),a._v(" "),v("ul",[v("li",[a._v("页面应用页面之间传值")])]),a._v(" "),v("h3",{attrs:{id:"localstorage"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[a._v("#")]),a._v(" LocalStorage")]),a._v(" "),v("ul",[v("li",[a._v("本地存储（需要主动删除）")])]),a._v(" "),v("p",[a._v("应用于：")]),a._v(" "),v("ul",[v("li",[a._v("缓存静态文件内容 JS/CSS（比如百度 M 站首页）")]),a._v(" "),v("li",[a._v("缓存不经常变更的 API 接口数据")]),a._v(" "),v("li",[a._v("储存地理位置信息")]),a._v(" "),v("li",[a._v("浏览在页面的具体位置")])]),a._v(" "),v("h3",{attrs:{id:"indexeddb"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb"}},[a._v("#")]),a._v(" IndexedDB")]),a._v(" "),v("ul",[v("li",[a._v("索引数据库")])]),a._v(" "),v("p",[a._v("应用于：")]),a._v(" "),v("ul",[v("li",[a._v("客户端存储大量结构化数据")]),a._v(" "),v("li",[a._v("没用网络连接的情况下使用（Google Doc、石墨文档）")]),a._v(" "),v("li",[a._v("冗余、很少修改、但经常访问的数据，以避免随时从服务器获取数据")])]),a._v(" "),v("h2",{attrs:{id:"减少浏览器回流、重绘"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#减少浏览器回流、重绘"}},[a._v("#")]),a._v(" 减少浏览器回流、重绘")]),a._v(" "),v("h3",{attrs:{id:"css"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[a._v("#")]),a._v(" CSS")]),a._v(" "),v("ul",[v("li",[a._v("避免过多样式嵌套")]),a._v(" "),v("li",[a._v("避免使用 CSS 表达式")]),a._v(" "),v("li",[a._v("使用绝对定位，可以让动画元素脱离文档流")]),a._v(" "),v("li",[a._v("避免使用 table 布局（会引起浏览器多次重绘）")]),a._v(" "),v("li",[a._v("尽量不使用 float 布局")]),a._v(" "),v("li",[a._v("图片最好设置好 width 和 height")]),a._v(" "),v("li",[a._v("尽量简化浏览器不必要的任务，减少页面重新布局")]),a._v(" "),v("li",[a._v("使用 Viewport 设置屏幕缩放级别")]),a._v(" "),v("li",[a._v("避免频繁设置样式，最好把新 style 属性设置完成后，进行一次性更改")]),a._v(" "),v("li",[a._v("避免使用引起回流/重绘的属性，最好把相应变量缓存起来")])]),a._v(" "),v("h3",{attrs:{id:"js"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[a._v("#")]),a._v(" JS")]),a._v(" "),v("p",[a._v("最小化回流和重排")]),a._v(" "),v("ul",[v("li",[a._v("为了减少回流发生次数，避免频繁操作 DOM，可以合并多次对 DOM 修改，然后一次性批量处理")])]),a._v(" "),v("p",[a._v("控制绘制过程和绘制区域")]),a._v(" "),v("ul",[v("li",[a._v("绘制过程开销比较大属性设置应该尽量避免较少使用")]),a._v(" "),v("li",[a._v("较少绘制区域范围")])]),a._v(" "),v("h2",{attrs:{id:"静态文件打包方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#静态文件打包方案"}},[a._v("#")]),a._v(" 静态文件打包方案")]),a._v(" "),v("ul",[v("li",[a._v("公共组件拆分")]),a._v(" "),v("li",[a._v("压缩：JS/CSS/图片")]),a._v(" "),v("li",[a._v("合并：JS/CSS 文件合并（减少网络请求数），CSS Sprite")]),a._v(" "),v("li",[a._v("Combo：服务端合并请求 jS")])]),a._v(" "),v("h2",{attrs:{id:"webpack-打包优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包优化"}},[a._v("#")]),a._v(" webpack 打包优化")]),a._v(" "),v("ul",[v("li",[a._v("定位体积大的模块")]),a._v(" "),v("li",[a._v("删除没有使用的依赖")]),a._v(" "),v("li",[a._v("生产模式进行公共依赖包抽离")]),a._v(" "),v("li",[a._v("开发模式进行 DLL & DllReference 方式优化")])]),a._v(" "),v("h2",{attrs:{id:"速度与激情"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#速度与激情"}},[a._v("#")]),a._v(" 速度与激情")]),a._v(" "),v("h3",{attrs:{id:"据读取速度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#据读取速度"}},[a._v("#")]),a._v(" 据读取速度")]),a._v(" "),v("p",[a._v("事实上数据访问速度有快慢之分，下面列出几个影响数据访问速度的因素：")]),a._v(" "),v("ul",[v("li",[a._v("字面量与局部变量的访问速度最快，数组元素和对象成员相对较慢")]),a._v(" "),v("li",[a._v("变量从局部作用域到全局作用域的搜索过程越长速度越慢")]),a._v(" "),v("li",[a._v("对象嵌套的越深，读取速度就越慢")]),a._v(" "),v("li",[a._v("对象在原型链中存在的位置越深，找到它的速度就越慢\n"),v("blockquote",[v("p",[a._v("推荐的做法是缓存对象成员值。将对象成员值缓存到局部变量中会加快访问速度")])])])]),a._v(" "),v("h3",{attrs:{id:"dom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[a._v("#")]),a._v(" DOM")]),a._v(" "),v("ul",[v("li",[a._v("在 JS 中对 DOM 进行访问的代价非常高。请尽可能减少访问 DOM 的次数（建议缓存 DOM 属性和元素、把 DOM 集合的长度缓存到变量中并在迭代中使用。读变量比读 DOM 的速度要快很多。）")]),a._v(" "),v("li",[a._v("重排与重绘的代价非常昂贵。如果操作需要进行多次重排与重绘，建议先让元素脱离文档流，处理完毕后再让元素回归文档流，这样浏览器只会进行两次重排与重绘（脱离时和回归时）。")]),a._v(" "),v("li",[a._v("善于使用事件委托")])]),a._v(" "),v("h3",{attrs:{id:"流程控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[a._v("#")]),a._v(" 流程控制")]),a._v(" "),v("ul",[v("li",[a._v("避免使用 for...in（它能枚举到原型，所以很慢）")]),a._v(" "),v("li",[a._v("在 JS 中倒序循环会略微提升性能")]),a._v(" "),v("li",[a._v("减少迭代的次数")]),a._v(" "),v("li",[a._v("基于循环的迭代比基于函数的迭代快 8 倍")]),a._v(" "),v("li",[a._v("用 Map 表代替大量的 if-else 和 switch 会提升性能")])]),a._v(" "),v("h3",{attrs:{id:"preload"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#preload"}},[a._v("#")]),a._v(" preload")]),a._v(" "),v("p",[a._v("Preload 提供了预获取资源的能力，可以将获取资源的行为从资源执行中分离出来。因此，Preload 可以构建自定义的资源加载与执行。")]),a._v(" "),v("p",[a._v("例如，应用可以使用 Preload 进行 CSS 资源的预加载、并且同时具备：高优先级、不阻塞渲染等特性。然后应用程序在合适的时间使用 CSS 资源：")]),a._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("link")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rel")]),v("span",{pre:!0,attrs:{class:"token attr-value"}},[v("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("preload"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),v("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),v("span",{pre:!0,attrs:{class:"token attr-value"}},[v("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("/styles/other.css"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),v("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("as")]),v("span",{pre:!0,attrs:{class:"token attr-value"}},[v("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("style"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n")])])]),v("h3",{attrs:{id:"构建优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#构建优化"}},[a._v("#")]),a._v(" 构建优化")]),a._v(" "),v("ul",[v("li",[a._v("Tree-shaking：是一种在构建过程中清除无用代码的技术。使用 Tree-shaking 可以减少构建后文件的体积。")]),a._v(" "),v("li",[a._v("Scope Hoisting：目前 Webpack 与 Rollup 都支持 Scope Hoisting。它们可以检查 import 链，并尽可能的将散乱的模块放到一个函数中，前提是不能造成代码冗余。所以只有被引用了一次的模块才会被合并。使用 Scope Hoisting 可以让代码体积更小并且可以降低代码在运行时的内存开销，同时它的运行速度更快。")]),a._v(" "),v("li",[a._v("code-splitting 是 Webpack 中最引人注目的特性之一。此特性能够把代码分离到不同的 bundle 中，然后可以按需加载或并行加载这些文件。code-splitting 可以用于获取更小的 bundle，以及控制资源加载优先级，如果使用合理，会极大影响加载时间。")]),a._v(" "),v("li",[a._v("使用 import 函数动态导入模块：使用静态 import 导入初始依赖模块。其他情况下使用动态 import 按需加载依赖")]),a._v(" "),v("li",[a._v("使用 HTTP 缓存头：expires，cache-control 等")])]),a._v(" "),v("h3",{attrs:{id:"其他"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),v("ul",[v("li",[a._v("HTTP2")]),a._v(" "),v("li",[a._v("使用最高级的 CDN（付费的比免费的强的多）")]),a._v(" "),v("li",[a._v("优化字体")]),a._v(" "),v("li",[a._v("其他垂直领域的性能优化")])])])}),[],!1,null,null,null);t.default=s.exports}}]);